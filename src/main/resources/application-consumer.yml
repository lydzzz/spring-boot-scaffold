server.port: 8081
spring:
  application:
    name: spring-boot-scaffold
  data:
    elasticsearch:
      cluster-name: elasticsearch
      cluster-nodes: 127.0.0.1:9300
  kafka:
    topic:
      userTopic: user
    bootstrap-servers: localhost:9092
    producer:
      batch-size: 65536
      buffer-memory: 524288
    consumer:
      group-id: kafka001
      auto-offset-reset: earliest
      enable-auto-commit: true
  servlet:
    multipart:
      max-file-size: 10240KB
      max-request-size: 10240KB
  cache:
    type: redis
    cache-names: redisCache
  redis:
    host: 127.0.0.1
    port: 6379
    ssl: false
    timeout: 15000
    jedis:
      pool:
        max-active: 20
        max-idle: 5
        min-idle: 0
        max-wait: -1
  datasource:
    name: test
    url: jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=utf8&useSSL=false
    username: root
    password: 123456
    driver-class-name: com.mysql.jdbc.Driver
    druid:
      initial-size: 10
      max-active: 50
      min-idle: 5
      max-wait: 3000
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      validation-query: select 1
      validation-query-timeout: 30000
      test-on-borrow: false
      test-on-return: false
      test-while-idle: false
      time-between-eviction-runs-millis: 6000
      min-evictable-idle-time-millis: 300000
      filters: stat,wall
      web-stat-filter.enabled: true
mybatis: 
  mapper-locations: classpath:cn/swift/mapper/*.xml
  type-aliases-package: cn.swift.model
  configuration:
    lazyLoadingEnabled: false
    aggressiveLazyLoading: true
    useGeneratedKeys: true
 
logging:
  level:
    cn.swift: debug
   
# Httpclient connection pool
httpClient:
  maxTotal: 200
  defaultMaxPerRoute: 100
  connectionTimeout: 10000
  connectionRequestTimeout: 1000
  socketTimeout: 30000
  readTimeout: 10000
  validateAfterInactivity: 60000
  
# ThreadPoolExecutor parameters
threadpool:
  corePoolSize: 10
  maxPoolSize: 20
  queueCapacity: 10
  keepAliveSeconds: 5
  awaitTerminationSeconds: 30
  
# Dubbo config properties
dubbo:
  service.version: 1.0.0
  application:
    name: dubbo-consumer-demo
    id: dubbo-consumer-demo
  protocol:
    id: dubbo
    name: dubbo
    port: 3864
  registry:
    id: my-registry
    address: N/A

# Dubbo Endpoints
endpoints.dubbo.enabled: true

# Enables Dubbo All Endpoints  
management:
  endpoint:
    dubbo.enabled: true
    dubbo-shutdown.enabled: true
    dubbo-services.enabled: true
    dubbo-references.enabled: true
    dubbo-properties.enabled: true
  # Dubbo Health Check
  health.dubbo.status:
    defaults: memory
    extras: load,threadpool
  # Exposes all web endpoints
  endpoints.web.exposure.include: "*"
    

